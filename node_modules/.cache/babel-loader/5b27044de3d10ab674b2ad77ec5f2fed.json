{"ast":null,"code":"var _jsxFileName = \"/Users/a/Downloads/zooming-and-panning-using-react-simple-mapsmap-argentina/src/Map/index.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { ComposableMap, ZoomableGroup, Geographies, Geography, Markers, Marker } from \"react-simple-maps\";\nimport { Motion, spring } from \"react-motion\";\nimport ReactTooltip from \"react-tooltip\";\nimport { STYLES_MAP, CITIES } from \"./constants\";\nimport { formatNumberDecimal } from \"./utils\";\nimport \"./styles.css\";\n\nclass Map extends Component {\n  constructor() {\n    super();\n    this.state = {\n      center: [-62, -40],\n      zoom: 2,\n      x: -62,\n      y: -40,\n      cities: CITIES\n    };\n    this.handleCityClick = this.handleCityClick.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.handleCitySelection = this.handleCitySelection.bind(this);\n  }\n\n  handleCityClick(city) {\n    this.setState({\n      zoom: 9,\n      center: city.coordinates\n    });\n  }\n\n  handleReset() {\n    this.setState({\n      center: [-62, -40],\n      zoom: 2\n    });\n  }\n\n  handleCitySelection(evt) {\n    const cityId = evt.target.getAttribute(\"data-city\");\n    const city = this.state.cities[cityId];\n    this.setState({\n      center: city.coordinates,\n      zoom: 9\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttonContainerCities\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, this.state.cities && this.state.cities.map((city, i) => /*#__PURE__*/React.createElement(\"button\", {\n      key: i,\n      className: \"buttonCity\",\n      \"data-city\": i,\n      onClick: this.handleCitySelection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }\n    }, city.name)), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"button\",\n      onClick: this.handleReset,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }\n    }, \"Reset\"))), /*#__PURE__*/React.createElement(Motion, {\n      defaultStyle: {\n        zoom: this.state.zoom,\n        x: this.state.x,\n        y: this.state.y\n      },\n      style: {\n        zoom: spring(this.state.zoom, {\n          stiffness: 210,\n          damping: 20\n        }),\n        x: spring(this.state.center[0], {\n          stiffness: 210,\n          damping: 20\n        }),\n        y: spring(this.state.center[1], {\n          stiffness: 210,\n          damping: 20\n        })\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }, ({\n      zoom,\n      x,\n      y\n    }) => /*#__PURE__*/React.createElement(ComposableMap, {\n      projectionConfig: {\n        scale: this.props.data.scale\n      },\n      width: this.props.data.width,\n      height: this.props.data.height,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ZoomableGroup, {\n      center: [x, y],\n      zoom: zoom,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Geographies, {\n      geography: this.props.data.map,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, (geographies, projection) => geographies.map(geography => {\n      const geographyValue = \"$ \".concat(formatNumberDecimal(geography.properties.VALUE));\n      return /*#__PURE__*/React.createElement(Geography, {\n        key: geography.properties.NAME,\n        \"data-tip\": \"\".concat(geography.properties.NAME, \" \").concat(geographyValue),\n        geography: geography,\n        projection: projection,\n        precision: 0.5,\n        style: {\n          default: STYLES_MAP.default,\n          hover: STYLES_MAP.hover,\n          pressed: STYLES_MAP.pressed\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 25\n        }\n      });\n    })), /*#__PURE__*/React.createElement(Markers, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, this.state.cities && this.state.cities.map((city, i) => /*#__PURE__*/React.createElement(Marker, {\n      key: i,\n      marker: city,\n      onClick: this.handleCityClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"circle\", {\n      cx: 0,\n      cy: 0,\n      r: 4,\n      fill: \"#FF5722\",\n      stroke: \"#DF3702\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 25\n      }\n    }))))))), /*#__PURE__*/React.createElement(ReactTooltip, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default Map;","map":{"version":3,"sources":["/Users/a/Downloads/zooming-and-panning-using-react-simple-mapsmap-argentina/src/Map/index.js"],"names":["React","Component","Fragment","ComposableMap","ZoomableGroup","Geographies","Geography","Markers","Marker","Motion","spring","ReactTooltip","STYLES_MAP","CITIES","formatNumberDecimal","Map","constructor","state","center","zoom","x","y","cities","handleCityClick","bind","handleReset","handleCitySelection","city","setState","coordinates","evt","cityId","target","getAttribute","render","map","i","name","stiffness","damping","scale","props","data","width","height","geographies","projection","geography","geographyValue","properties","VALUE","NAME","default","hover","pressed"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\nimport {\n  ComposableMap,\n  ZoomableGroup,\n  Geographies,\n  Geography,\n  Markers,\n  Marker\n} from \"react-simple-maps\";\nimport { Motion, spring } from \"react-motion\";\nimport ReactTooltip from \"react-tooltip\";\n\nimport { STYLES_MAP, CITIES } from \"./constants\";\nimport { formatNumberDecimal } from \"./utils\";\nimport \"./styles.css\";\n\nclass Map extends Component {\n  constructor() {\n    super();\n    this.state = {\n      center: [-62, -40],\n      zoom: 2,\n      x: -62,\n      y: -40,\n      cities: CITIES\n    };\n    this.handleCityClick = this.handleCityClick.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.handleCitySelection = this.handleCitySelection.bind(this);\n  }\n  handleCityClick(city) {\n    this.setState({\n      zoom: 9,\n      center: city.coordinates\n    });\n  }\n  handleReset() {\n    this.setState({\n      center: [-62, -40],\n      zoom: 2\n    });\n  }\n  handleCitySelection(evt) {\n    const cityId = evt.target.getAttribute(\"data-city\");\n    const city = this.state.cities[cityId];\n    this.setState({\n      center: city.coordinates,\n      zoom: 9\n    });\n  }\n  render() {\n    return (\n      <Fragment>\n        <div className=\"container\">\n          <div className=\"buttonContainerCities\">\n            {this.state.cities &&\n              this.state.cities.map((city, i) => (\n                <button\n                  key={i}\n                  className=\"buttonCity\"\n                  data-city={i}\n                  onClick={this.handleCitySelection}\n                >\n                  {city.name}\n                </button>\n              ))}\n            <button className=\"button\" onClick={this.handleReset}>\n              Reset\n            </button>\n          </div>\n        </div>\n        <Motion\n          defaultStyle={{\n            zoom: this.state.zoom,\n            x: this.state.x,\n            y: this.state.y\n          }}\n          style={{\n            zoom: spring(this.state.zoom, { stiffness: 210, damping: 20 }),\n            x: spring(this.state.center[0], { stiffness: 210, damping: 20 }),\n            y: spring(this.state.center[1], { stiffness: 210, damping: 20 })\n          }}\n        >\n          {({ zoom, x, y }) => (\n            <ComposableMap\n              projectionConfig={{ scale: this.props.data.scale }}\n              width={this.props.data.width}\n              height={this.props.data.height}\n            >\n              <ZoomableGroup center={[x, y]} zoom={zoom}>\n                <Geographies geography={this.props.data.map}>\n                  {(geographies, projection) =>\n                    geographies.map(geography => {\n                      const geographyValue = `$ ${formatNumberDecimal(\n                        geography.properties.VALUE\n                      )}`;\n                      return (\n                        <Geography\n                          key={geography.properties.NAME}\n                          data-tip={`${\n                            geography.properties.NAME\n                          } ${geographyValue}`}\n                          geography={geography}\n                          projection={projection}\n                          precision={0.5}\n                          style={{\n                            default: STYLES_MAP.default,\n                            hover: STYLES_MAP.hover,\n                            pressed: STYLES_MAP.pressed\n                          }}\n                        />\n                      );\n                    })\n                  }\n                </Geographies>\n                <Markers>\n                  {this.state.cities &&\n                    this.state.cities.map((city, i) => (\n                      <Marker\n                        key={i}\n                        marker={city}\n                        onClick={this.handleCityClick}\n                      >\n                        <circle\n                          cx={0}\n                          cy={0}\n                          r={4}\n                          fill=\"#FF5722\"\n                          stroke=\"#DF3702\"\n                        />\n                      </Marker>\n                    ))}\n                </Markers>\n              </ZoomableGroup>\n            </ComposableMap>\n          )}\n        </Motion>\n        <ReactTooltip />\n      </Fragment>\n    );\n  }\n}\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}